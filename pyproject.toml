[tool.poetry]
packages = [{ include = "aurum" }]
version = "0.1.5.7"
name = "aurum-hikari"
authors = ["stefanlight8 <64615032+stefanlight8@users.noreply.github.com>"]
description = "A flexible framework for handling commands and components."
readme = "README.md"
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
keywords = [
    "discord",
    "hikari",
    "commands",
    "components",
    "command-handler",
    "component-handler",
    "framework",
]

[tool.poetry.urls]
repository = "https://github.com/ShinshiDevs/aurum-hikari"
documentation = "https://shinshidevs.github.io/aurum-hikari/"
"Issue Tracker" = "https://github.com/ShinshiDevs/aurum-hikari/issues"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
hikari = ">=2.0.0.dev122"
attrs = ">=23.2,<25.0"

[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.5.3,<1.7"

mkdocs-material = { version = "^9.5.23", extras = ["imaging"] }
mkdocs-material-extensions = "^1.3.1"

mkdocstrings-python = ">=1.8.0,<1.13"
griffe-inherited-docstrings = "^1.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
ruff = ">=0.4.3,<0.7.0"
black = "^24.4.2"
pyright = "^1.1.364"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "F405"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_unused_configs = true
warn_return_any = true
warn_redundant_casts = true
namespace_packages = true

[tool.pyright]
include = ["aurum", "examples"]
exclude = ["tests"]
pythonVersion = "3.10"
typeCheckingMode = "strict"
reportPrivateUsage = false
reportImportCycles = false

[tool.black]
line-length = 100
target-version = ['py310']
skip-magic-trailing-comma = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
